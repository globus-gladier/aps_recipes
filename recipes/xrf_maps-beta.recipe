# Name: xrf_maps
# Version: beta
# Description: Container for XRF maps processing
# Maintainer: Gladier APS Team <gladier@globus-aps.org>
# Base Image: docker.io/continuumio/miniconda3:latest
# Last Updated: 2024-03-19

# Use the fully qualified Miniconda3 image from Docker Hub.
FROM docker.io/continuumio/miniconda3:latest

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    CONDA_ENV=base

# Install system build dependencies
RUN apt-get update && \
    apt-get install -y \
        build-essential \
        libssl-dev \
        libffi-dev \
        cmake \
        git \
        libhdf5-dev \
        libhdf5-serial-dev \
        libnetcdf-dev \
        libeigen3-dev \
        libzmq3-dev \
        pkg-config && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Python 3.11 and required packages from conda-forge
RUN conda install -y -c conda-forge \
        python=3.11 \
        tomopy \
        dxchange \
        matplotlib \
        h5py \
        netcdf4 \
        eigen \
        zeromq && \
    conda clean -afy

# Clone and build XRF-Maps
WORKDIR /container
RUN git clone --recurse-submodules https://github.com/AdvancedPhotonSource/XRF-Maps.git && \
    cd XRF-Maps && \
    mkdir build && \
    cd build && \
    cmake -DBUILD_WITH_ZMQ=ON \
        -DZeroMQ_INCLUDE_DIR=/usr/include \
        -DZeroMQ_STATIC_LIBRARY=/usr/lib/x86_64-linux-gnu/libzmq.a \
        -DEIGEN3_INCLUDES=/usr/include/eigen3 \
        -DCMAKE_PREFIX_PATH=/usr/lib/x86_64-linux-gnu/cmake/hdf5 \
        -DHDF5_DIR=/usr/lib/x86_64-linux-gnu/cmake/hdf5 \
        ../ && \
    cmake --build . --config Release

# Install globus-compute-endpoint via pip
RUN pip install --no-cache-dir globus-compute-endpoint

# Default command: launch a bash terminal.
CMD ["/bin/bash"]
